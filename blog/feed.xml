<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sugyeong Blog</title>
  <subtitle>Sugyeong's Git Page~!</subtitle>
  <id>http://sugyeone.github.io/blog</id>
  <link href="http://sugyeonge.github.io/blog"/>
  <link href="http://sugyeone.github.io/blog/feed.xml" rel="self"/>
  <updated>2020-04-27T00:00:00+00:00</updated>
  <author>
    <name>The Bundler Team</name>
  </author>
  <entry>
    <title>March Bundler Update</title>
    <link rel="alternate" href="http://bundler.io/blog/2020/04/27/march-monthly-update.html"/>
    <id>http://bundler.io/blog/2020/04/27/march-monthly-update.html</id>
    <published>2020-04-27T00:00:00+00:00</published>
    <updated>2020-09-07T18:23:28+00:00</updated>
    <author>
      <name>Gift Egwuenu</name>
    </author>
    <content type="html">&lt;p&gt;Welcome to the Bundler monthly update! As part of our efforts at &lt;a href="https://rubytogether.org"&gt;Ruby Together&lt;/a&gt;, we publish a recap of the work that we‚Äôve done the previous month. Read on to find out what updates were made to Bundler in March.&lt;/p&gt;

&lt;p&gt;Amazingly, all that work that the entire Bundler and RubyGems teams have been working at for years has paid off in a really big way: Bundler and RubyGems have merged repositories! On GitHub, &lt;code&gt;bundler/bundler&lt;/code&gt; is archived, and all ongoing work on both projects now takes place inside &lt;code&gt;RubyGems/RubyGems&lt;/code&gt;. All other repositories from the Bundler organization have either been archived (if unused) or moved to the RubyGems organization.&lt;/p&gt;

&lt;p&gt;Not just the repositories have changed, either: the Bundler and RubyGems teams have merged as well. It‚Äôll take us some time to work through 20 years worth of documentation and webpages, but we‚Äôll be combining and updating them as fast as we can.&lt;/p&gt;

&lt;p&gt;From this point forward, Bundler news will be reported together with RubyGems news. Hooray! üéâ&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Interested in contributing to Bundler? We always welcome contributions in the forms of triaging bugs, adding new features, writing docs, and engaging with the wider community. Visit the &lt;a href="https://github.com/rubygems/rubygems/blob/master/bundler/doc/contributing/README.md"&gt;Bundler Contributor Guidelines&lt;/a&gt; on GitHub to get started. Don‚Äôt have time to contribute, but want to support our work? Sign up as a member of &lt;a href="https://rubytogether.org/"&gt;Ruby Together&lt;/a&gt; to help fund our work to keep Bundler working for everyone.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Solutions for 'Cant find gem bundler (&gt;= 0.a) with executable bundle'</title>
    <link rel="alternate" href="http://bundler.io/blog/2019/05/14/solutions-for-cant-find-gem-bundler-with-executable-bundle.html"/>
    <id>http://bundler.io/blog/2019/05/14/solutions-for-cant-find-gem-bundler-with-executable-bundle.html</id>
    <published>2019-05-14T00:00:00+00:00</published>
    <updated>2020-09-07T18:23:28+00:00</updated>
    <author>
      <name>Colby Swandale</name>
    </author>
    <content type="html">&lt;p&gt;TL;DR: run &lt;code&gt;gem update --system&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id="what-is-this-bug"&gt;What is this bug?&lt;/h2&gt;

&lt;p&gt;Some versions of RubyGems try to use the exact version of Bundler listed in your Gemfile.lock anytime you run the bundle command. If you are using one of those versions of RubyGems, but do not have that exact version of Bundler installed, you will run into this error:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Can't find gem bundler (&amp;gt;= 0.a) with executable bundle (Gem::GemNotFoundException)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This error is saying (in a very particular way) that RubyGems was unable to find the exact version of Bundler that is in your Gemfile.lock.&lt;/p&gt;

&lt;p&gt;This is a bug, and RubyGems should be willing to use the version of Bundler that you have installed. The bug is fixed in RubyGems 2.7.10 or 3.0.0 and above, which you can install by running &lt;code&gt;gem update --system&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you want to know more about how this happened, keep reading!&lt;/p&gt;

&lt;h2 id="why-does-this-bug-exist"&gt;Why does this bug exist?&lt;/h2&gt;

&lt;p&gt;Starting in RubyGems 2.7, the RubyGems and Bundler teams worked together to add a feature for the future: a Bundler version switcher. The intention was that later on when Bundler 2 eventually came out, RubyGems would be able to lock Bundler‚Äôs version on a per-application basis. It did this by reading the Gemfile.lock and using the version of Bundler listed in the &lt;code&gt;BUNDLED WITH&lt;/code&gt; section.&lt;/p&gt;

&lt;p&gt;After more discussion and experimentation, before Bundler 2 actually shipped, the Bunder team decided that this was too surprising and the user experience did not meet expectations.&lt;/p&gt;

&lt;p&gt;Unfortunately, the code in RubyGems that looked for an exact version of the Bundler gem based on &lt;code&gt;BUNDLED WITH&lt;/code&gt; was already out there. We didn‚Äôt realize it in advance, but that code causes this error anytime the &lt;code&gt;BUNDLED WITH&lt;/code&gt; version is even slightly different from the exact Bundler gem you have installed. (For example, you might have only Bundler 2.0.3, while &lt;code&gt;BUNDLED WITH&lt;/code&gt; calls for 2.0.2. In that case, RubyGems will unfortunately raise this error.)&lt;/p&gt;

&lt;h2 id="what-are-the-possible-solutions"&gt;What are the possible solutions?&lt;/h2&gt;

&lt;p&gt;There are a few options, depending on what you are able to update to newer versions.&lt;/p&gt;

&lt;h2 id="update-rubygems"&gt;Update RubyGems&lt;/h2&gt;

&lt;p&gt;The easiest way is to update to the latest RubyGems (2.7.10 and 3.0.4) or higher. You can do that by running &lt;code&gt;gem update --system&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id="update-ruby"&gt;Update Ruby&lt;/h2&gt;

&lt;p&gt;Ruby 2.6.3 includes a version of RubyGems with the fix for this issue.&lt;/p&gt;

&lt;h2 id="install-the-exact-bundler"&gt;Install the exact Bundler&lt;/h2&gt;

&lt;p&gt;If updating Ruby or RubyGems is not an available option, you install the exact version of Bundler that RubyGems is looking for by running:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
$ gem install bundler -v "$(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -n 1)"
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once you‚Äôve installed the exact version that RubyGems will try to load, future bundle commands should work.&lt;/p&gt;

&lt;h2 id="im-still-having-this-problem-after-trying-everything-else"&gt;I‚Äôm still having this problem after trying everything else&lt;/h2&gt;

&lt;p&gt;Oh no! We‚Äôd like to help you figure it out. Head over to the GitHub issue tracker and open a new issue, and we‚Äôll do what we can to help.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;‚Äî Colby and the Bundler team&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>January and February Bundler Update</title>
    <link rel="alternate" href="http://bundler.io/blog/2019/03/12/january-february-bimonthly-update.html"/>
    <id>http://bundler.io/blog/2019/03/12/january-february-bimonthly-update.html</id>
    <published>2019-03-12T00:00:00+00:00</published>
    <updated>2020-09-07T18:23:28+00:00</updated>
    <author>
      <name>Stephanie Morillo</name>
    </author>
    <content type="html">&lt;p&gt;Welcome to the December 2018 monthly update!&lt;/p&gt;

&lt;p&gt;In January, we awarded our &lt;a href="https://rubytogether.org/projects"&gt;first three-month long project grant&lt;/a&gt; to David Rodriguez for his work on Bundler and RubyGems. Here‚Äôs his first update:&lt;/p&gt;

&lt;p&gt;Hello everyone!&lt;/p&gt;

&lt;p&gt;This is my first progress report about my collaboration with Ruby Together to improve Bundler‚Äôs release process and deprecation management. I feel really proud that I‚Äôve been given this opportunity, and I will do my best to improve the core of the Ruby ecosystem!&lt;/p&gt;

&lt;p&gt;I have focused on several things these first two weeks:&lt;/p&gt;

&lt;p&gt;I stabilized the builds of both Bundler and RubyGems, by fixing skipped tests and flaky failures to get both CIs consistently green. This should make subsequent improvements easier. In RubyGems, I landed several bug fixes in the install and update commands. With the release of Bundler 2 supporting only RubyGems 3.0, the basic command, ‚Äúgem install rails‚Äù, started failing. We reverted the RubyGems 3.0 requirement in Bundler 2.0.1 to workaround this, but I intend to make &lt;code&gt;gem install&lt;/code&gt; properly fallback to installing an older version when the &lt;code&gt;required_rubygems_version&lt;/code&gt; requirement of the latest version is not satisfied. However, I decided to initially focus on some misc bug fixes in the install and update commands, to familiarize with the RubyGems code base and to be able to tackle this improvement with more confidence in the upcoming weeks. Big kudos to RubyGems contributor @MSP-Greg for providing the initial work for some of these fixes!&lt;/p&gt;

&lt;p&gt;In Bundler, I started moving forward a new approach for deprecations, which will be enabled by default in the next release. We have a lot of improvements in Bundler‚Äôs master, but we haven‚Äôt released them for a long time, because they imply breaking changes. By starting to display deprecations for these changes, we‚Äôll be closer to actually being able to release them. I also started addressing some issues surfaced by the Bundler 2 release, specifically about being too picky about the Bundler version a specific application should run. Currently, Bundler will raise if the version in the BUNDLED WITH section of the lock file doesn‚Äôt match the running version. We feel it‚Äôs premature to do this now, so I‚Äôm looking into downgrading this to a warning for the time being. I also coordinated with @colby-swandale the merge of Bundler 2 back into master, which hasn‚Äôt yet happened since the Bundler 2 release.&lt;/p&gt;

&lt;p&gt;Finally, I‚Äôve dedicated a fair amount of time to review the integration of Bundler into ruby-core since the 2.6 release, and the ‚Äúgemification‚Äù of the standard library. Thanks to @hsbt, this is now a reality, but it comes with its own set of difficulties. I‚Äôve been studying these difficulties and creating some fixes and workarounds for them. I plan to keep working on making this transition as smooth as possible for everyone.&lt;/p&gt;

&lt;p&gt;I really hope my work is appreciated by the community and I expect to deliver better and bigger improvements in the upcoming weeks!&lt;/p&gt;

&lt;p&gt;Best regards,
David&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is a combined update for January and February, so here is David‚Äôs second update as well:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hello everyone!&lt;/p&gt;

&lt;p&gt;This is my second report about my collaboration with Rubytogether to improve bundler‚Äôs release process and deprecation management. They were a couple of exciting weeks, because I now feel I‚Äôm closer to being ready to release some of the work I‚Äôve been doing.&lt;/p&gt;

&lt;p&gt;The following is a non extensive list of the stuff I‚Äôve been focusing on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I continued the work on bundler‚Äôs deprecations. I reviewed each deprecation and made sure the messages are actionable, they show up when they should, and they have passing specs. In particular, I made a plan for the deprecation of the changes that are most likely to be controversial and require special care. For example, I proposed to deprecate sticky options, and custom gemfile sources (such as :github, :gist, or :bitbucket), in a smoother process that should be more friendly to our users because it happens in several steps across multiple major versions. Finally, I made sure that we use non-deprecated features in our own specs, in order to set a good example :)&lt;/li&gt;
  &lt;li&gt;In addition to deprecations, I also finished the work that I mentioned in &lt;a href=""&gt;the previous report&lt;/a&gt; about only reporting warnings and not hard errors when we find a mismatch between the running bundler version and the version the Gemfile was created with. I hope to release these changes in both rubygems and bundler soon.&lt;/li&gt;
  &lt;li&gt;I also continued to improve the integration of bundler into ruby-core. I proposed to &lt;a href="https://github.com/bundler/bundler/pull/6985"&gt;eliminate the &lt;code&gt;git&lt;/code&gt; dependency from bundler‚Äôs gemspec&lt;/a&gt; (which has caused problems with the integration), and raised &lt;a href="https://bugs.ruby-lang.org/issues/15610"&gt;an issue&lt;/a&gt; with ruby-core about where the default copies of bundler &amp;amp; rubygems should live, and how they should get updated. I‚Äôm in touch with hsbt and we plan to discuss the future of this integration some time in the near future.&lt;/li&gt;
  &lt;li&gt;Finally, I‚Äôve been working on making our specs ‚Äúdocker friendly‚Äù, and making bundler testable under bare docker images of ruby and rvm. My understanding is that this should make it much easier to reproduce CI failures (or user reported bugs), and to detect version manager specific regressions (or ruby-core integration bugs). Besides that, testing on top of custom docker images is something provided built-in by Azure pipelines, so it‚Äôs a good opportunity to try it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I mentioned in the previous report, I‚Äôm very glad to be working on bundler during these weeks. Any suggestions or feedback you may have, feel free to share them through Github, Slack or whatever means you like!&lt;/p&gt;

&lt;p&gt;See you again soon,
David&lt;/p&gt;

&lt;p&gt;In January and February, Bundler gained 110 new commits, contributed by 11 authors. There were 1,401 additions and 1,503 deletions across 849 files.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Interested in contributing to Bundler? We always welcome contributions in the forms of triaging bugs, adding new features, writing docs, and engaging with the wider community. Visit the &lt;a href="https://github.com/bundler/bundler/blob/master/doc/contributing/README.md"&gt;Bundler Contributor Guidelines&lt;/a&gt; on GitHub to get started. Don‚Äôt have time to contribute, but want to support our work? Sign up as a member of &lt;a href="https://rubytogether.org/"&gt;Ruby Together&lt;/a&gt; to help fund our work to keep Bundler working for everyone.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>December 2018 Bundler Update</title>
    <link rel="alternate" href="http://bundler.io/blog/2019/02/02/december-monthly-update.html"/>
    <id>http://bundler.io/blog/2019/02/02/december-monthly-update.html</id>
    <published>2019-02-02T00:00:00+00:00</published>
    <updated>2020-09-07T18:23:28+00:00</updated>
    <author>
      <name>Stephanie Morillo</name>
    </author>
    <content type="html">&lt;p&gt;Welcome to the December 2018 monthly update!&lt;/p&gt;

&lt;p&gt;In December, Bundler reached two huge and exciting milestones. First, Ruby included Bundler for the first time ever, including Bundler 1.17.2 in Ruby 2.6. Special thanks are due to &lt;a href="https://github.com/hsbt"&gt;@hsbt&lt;/a&gt; for years worth of work integrating Bundler into the ruby-core test suite and keeping everything working and up to date.&lt;/p&gt;

&lt;p&gt;Second, Bundler &lt;a href="https://bundler.io/blog/2019/01/03/announcing-bundler-2.html"&gt;shipped version 2.0&lt;/a&gt;! It‚Äôs a big milestone, and the Bundler team is very excited to adopt a yearly major release cadence, to better match Ruby itself.&lt;/p&gt;

&lt;p&gt;Bundler gained 55 new commits, contributed by 7 authors. There were 225 additions and 63 deletions across 21 files.&lt;/p&gt;

&lt;p&gt;Interested in contributing to Bundler? We always welcome contributions in the forms of triaging bugs, adding new features, writing docs, and engaging with the wider community. Visit the &lt;a href="https://github.com/bundler/bundler/blob/master/doc/contributing/README.md"&gt;Bundler Contributor Guidelines&lt;/a&gt; on GitHub to get started. Don‚Äôt have time to contribute, but want to support our work? Sign up as a member of &lt;a href="https://rubytogether.org/"&gt;Ruby Together&lt;/a&gt; to help fund our work to keep Bundler working for everyone.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>An update on the Bundler 2 release</title>
    <link rel="alternate" href="http://bundler.io/blog/2019/01/04/an-update-on-the-bundler-2-release.html"/>
    <id>http://bundler.io/blog/2019/01/04/an-update-on-the-bundler-2-release.html</id>
    <published>2019-01-04T00:00:00+00:00</published>
    <updated>2020-09-07T18:23:28+00:00</updated>
    <author>
      <name>Colby Swandale</name>
    </author>
    <content type="html">&lt;p&gt;Yesterday I released Bundler 2.0 that introduced a number of breaking changes. One of the those changes was setting Bundler to require RubyGems v3.0.0. After making the release, it has become clear that lots of our users are running into issues with Bundler 2 requiring a really new version of RubyGems.&lt;/p&gt;

&lt;p&gt;We have been listening closely to feedback from users and have decided to relax the RubyGems requirement to v2.5.0 at minimum. We have released a new Bundler version, v2.0.1, that adjusts this requirement.&lt;/p&gt;

&lt;p&gt;I apologise to our users for the disruption this has caused.&lt;/p&gt;

&lt;h3 id="important-note"&gt;Important Note&lt;/h3&gt;

&lt;p&gt;Bundler 2 introduced a new feature that will automatically switch between Bundler v1 and v2 based on the lockfile. This feature is enabled by RubyGems (only on versions 2.7.0+) which unfortunately has a bug when you run Bundler without the appropriate version installed. You may encounter an error message like:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Can't find gem bundler (&amp;gt;= 0.a) with executable bundle (Gem::GemNotFoundException)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you do, it can be fixed by installing the version of Bundler that is declared in the lockfile.&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cat Gemfile.lock | grep -A 1 "BUNDLED WITH"
BUNDLED WITH
   1.17.3

$ gem install bundler -v '1.17.3'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This bug was fixed in RubyGems 3.0.0 but backports are now being prepared for previous major versions of RubyGems. We‚Äôll let you know when they become available.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;Colby and the Bundler team&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Announcing Bundler 2.0</title>
    <link rel="alternate" href="http://bundler.io/blog/2019/01/03/announcing-bundler-2.html"/>
    <id>http://bundler.io/blog/2019/01/03/announcing-bundler-2.html</id>
    <published>2019-01-03T00:00:00+00:00</published>
    <updated>2020-09-07T18:23:28+00:00</updated>
    <author>
      <name>Colby Swandale</name>
    </author>
    <content type="html">&lt;p&gt;The Bundler team is excited to announce the release of Bundler 2.0 üéâ!&lt;/p&gt;

&lt;p&gt;This release focuses on removing offical support of versions of Ruby and RubyGems that have reached their end of life, with a few other small breaking changes.&lt;/p&gt;

&lt;p&gt;The following is the full list of changes to Bundler 2:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Removed support for Ruby &amp;lt; 2.3&lt;/li&gt;
  &lt;li&gt;Removed support for RubyGems &amp;lt; 3.0.0&lt;/li&gt;
  &lt;li&gt;Changed the &lt;code&gt;github: 'some/repo'&lt;/code&gt; gem source to use the  &lt;code&gt;https&lt;/code&gt; schema by default&lt;/li&gt;
  &lt;li&gt;Errors/warnings will now print to &lt;code&gt;STDERR&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Bundler now auto-switches between version 1 and 2 based on the Lockfile&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="update"&gt;Update&lt;/h3&gt;

&lt;p&gt;We‚Äôve posted an update on the &lt;a href="/blog/2019/01/04/an-update-on-the-bundler-2-release.html"&gt;release of Bundler 2&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="what-is-version-autoswitching"&gt;What is version autoswitching?&lt;/h3&gt;

&lt;p&gt;Version autoswitching means that Bundler will automatically run the correct 1.x or 2.x version based on your lockfile. This means you can have both Bundler 1.17.3 and Bundler 2.0.0 installed at the same time, and each application will use the version saved in your lockfile when you run &lt;code&gt;bundle install&lt;/code&gt;. Every existing application should continue to work using Bundler 1, even after you have installed Bundler 2 (or even Bundler 3 or 4, later on).&lt;/p&gt;

&lt;h3 id="installing-bundler-2"&gt;Installing Bundler 2&lt;/h3&gt;

&lt;p&gt;Bundler 2 requires RubyGems 3.0, so install that first by running:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ gem update --system
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, install Bundler 2 by running:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ gem install bundler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="why-does-bundler-depend-on-rubygems-30"&gt;Why does Bundler depend on RubyGems 3.0?&lt;/h3&gt;

&lt;p&gt;To make Bundler‚Äôs user experience when it auto-switches between versions as smooth as possible, Bundler depends on particular features in RubyGems that were publicly introduced in RubyGems v3.0.&lt;/p&gt;

&lt;p&gt;RubyGems is able to be upgraded to newest release using the &lt;code&gt;gem update --system&lt;/code&gt; command. See &lt;a href="https://guides.rubygems.org/command-reference/#gem-update"&gt;RubyGems Guides&lt;/a&gt; for more information.&lt;/p&gt;

&lt;h3 id="upgrading-existing-applications-to-use-bundler-2"&gt;Upgrading existing applications to use Bundler 2&lt;/h3&gt;

&lt;p&gt;Bundler will never automatically upgrade an application to Bundler 2 without your explicit permission. If you are ready to upgrade an existing application to use Bundler 2, you can run this command and then commit your lockfile:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ bundle update --bundler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="upgrading-new-applications-to-use-bundler-2"&gt;Upgrading new applications to use Bundler 2&lt;/h3&gt;

&lt;p&gt;If you have Bundler 2 installed, new applications will use Bundler 2 automatically. After you run &lt;code&gt;bundle install&lt;/code&gt;, you can check the lockfile to see which version of Bundler your application will use.&lt;/p&gt;

&lt;h3 id="can-i-use-bundler-2-on-heroku"&gt;Can I use Bundler 2 on Heroku?&lt;/h3&gt;

&lt;p&gt;Yes you can! The Heroku team has said they plan to upgrade the official Ruby buildpack to Bundler 2, but it will take some time. They have a zillion users, so that totally makes sense.&lt;/p&gt;

&lt;p&gt;In the meantime, you can use our &lt;a href="https://github.com/bundler/heroku-buildpack-bundler2"&gt;buildpack&lt;/a&gt;, which is exactly the same as Heroku‚Äôs but with Bundler 2.&lt;/p&gt;

&lt;p&gt;Note: Support for the Bundler 2 buildpack is limited. You are welcome to report issues at the &lt;a href="https://github.com/bundler/heroku-buildpack-bundler2"&gt;bundler/heroku-buildpack-bundler2&lt;/a&gt; repository, but we can‚Äôt guarantee solutions.&lt;/p&gt;

&lt;h3 id="major-releases-going-forward"&gt;Major releases going forward&lt;/h3&gt;

&lt;p&gt;With the release of Bundler 2, the core team now kicks off a new release schedule for Bundler: we‚Äôre going to aim for one major version release per year, so we can drop support for older Ruby and RubyGems versions around the same time that the Ruby core team does. Being able to stop supporting Ruby 1.8.7 is a huge relief!&lt;/p&gt;

&lt;h3 id="more-information"&gt;More Information&lt;/h3&gt;

&lt;p&gt;If you have more questions, or want more information about Bundler 2, read our &lt;a href="https://bundler.io/guides/bundler_2_upgrade.html"&gt;detailed Bundler 2 guide&lt;/a&gt; for the full scoop.&lt;/p&gt;

&lt;h3 id="i-tried-to-upgrade-but-something-is-broken"&gt;I tried to upgrade but something is broken!&lt;/h3&gt;

&lt;p&gt;Oh no! Sorry about that. Please head over to our &lt;a href="https://github.com/bundler/bundler/blob/master/doc/contributing/ISSUES.md"&gt;troubleshooting guide&lt;/a&gt; and open a ticket so that we can try to fix your problem ASAP.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;We hope you enjoy this release. Happy Bundling!&lt;/p&gt;

&lt;p&gt;‚Äî Colby and the Bundler team&lt;/p&gt;
</content>
  </entry>
</feed>
